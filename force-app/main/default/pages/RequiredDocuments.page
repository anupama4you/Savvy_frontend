<apex:page standardController="Custom_Opportunity__c" extensions="RequiredDocumentsExtension">
  <style>
    #filedrag {
      display: none;
      font-weight: bold;
      text-align: center;
      padding: 1em 0;
      margin: 1em 0;
      color: #555;
      border: 0.5px dashed #555;
      border-radius: 7px;
      cursor: default;
    }
  
    #filedrag.hover {
      color: #f00;
      border-color: #f00;
      border-style: solid;
      box-shadow: inset 0 3px 4px #888;
    }
  
    .SideButtons {
      padding: 6px 7px !important;
      color: #fff !important;
      font-size: 11px !important;
      outline: none !important;
      /* text-transform: uppercase !important; */
      background: rgb(0, 0, 0) !important;
      /* background: -webkit-linear-gradient(top, rgba(125,126,125,1) 0%,rgba(14,14,14,1) 100%) !important; */
      /* background: linear-gradient(to bottom, rgba(125,126,125,1) 0%,rgba(14,14,14,1) 100%) !important; */
    }
  </style>
  <ul id="objects"></ul>
  <form id="upload" action="upload.php" method="POST" enctype="multipart/form-data">
    <fieldset>
      <legend>Amazon S3 Upload</legend>
      <input type="hidden" id="MAX_FILE_SIZE" name="MAX_FILE_SIZE" value="300000" />
      <div>
        <label for="fileselect">Files to upload:</label>
        <input type="file" id="fileselect" name="fileselect[]" multiple="multiple" class="btn SideButtons" />
        <div id="filedrag">
          <p>
            <br/>Drag and Drop files here
            <br/>
          </p>
        </div>
      </div>
      <div id="submitbutton">
        <button type="submit">Upload Files</button>
      </div>
    </fieldset>
  </form>
  <div id="messages">
    <p>Status Messages</p>
  </div>
  <div id="status"></div>
  <div id="results"></div>
  <div id="results2" style="">
    <apex:form >
      <apex:commandButton action="{!loadRequiredDocuments}" value="Click here to Reload Cloud Document List" id="refeshDocs" reRender="tablePanel"
        status="stsReload" styleClass="SideButtons" /> &nbsp;&nbsp;&nbsp;
      <apex:actionStatus startText="processing... " id="stsReload" />
    </apex:form>
  </div>
  <apex:pageMessage severity="info" rendered="true" title="Note 1:" summary="- Double click on the 'Document Type' or 'Send To Lender' column to update its value."/>
  <apex:pageMessage severity="info" rendered="true" title="Note 2:" summary="- Please mark what documents should be sent to the lenders."
  />
  <apex:form >
    <apex:pageBlock mode="mainDetail" id="tablePanel">
      <apex:pageBlockButtons >
        <apex:commandButton action="{!SaveInlineChanges}" value="Update" id="savebtn" styleClass="SideButtons" />
        <apex:commandButton action="{!cancel}" value="Back to the Opportunity" id="cancelbtn" styleClass="SideButtons" />
        <apex:commandButton value="Back to the Application Form" action="{!goApplication}" styleClass="SideButtons" />
        <apex:commandButton value="Submit to Pre-approval" action="{!submitPreApproval}" styleClass="SideButtons" />
        <apex:commandButton value="Submit to Amendment" action="{!submitAmendment}" styleClass="SideButtons" />
        <apex:commandButton value="Submit to Formal Approval" action="{!submitFormalApproval}" styleClass="SideButtons" />
        <!-- <apex:commandButton action="{!SaveAndSubmitChanges}" value="Submit to Internal Settlement" id="submitbtn" styleClass="SideButtons" /> -->
      </apex:pageBlockButtons>
      <apex:pageBlockTable value="{!requiredDocList}" var="item">
        <apex:column headerValue="Action" width="2%">
          <apex:commandLink action="{!deleteDocument}" value="Del" reRender="tablePanel, msg" status="stsDeleteing">
            <apex:param name="itemSelected" assignTo="{!itemSelected}" value="{!item.Id}" />
          </apex:commandLink>
        </apex:column>
        <apex:column value="{!item.File_Name__c}" width="50%" />
        <apex:column headerValue="Document Type" width="35%">
          <apex:actionRegion >
            <apex:outputField value="{!item.Document_Type__c}">
              <apex:inlineEditSupport event="ondblClick" showOnEdit="savebtn" />
            </apex:outputField>
          </apex:actionRegion>
        </apex:column>
        <apex:column headerValue="Send To Lender">
            <apex:actionRegion >
          <apex:outputField value="{!item.Send_To_Lender__c}">
            <apex:inlineEditSupport event="ondblClick" showOnEdit="savebtn" />
          </apex:outputField>
        </apex:actionRegion>
        </apex:column>
        <apex:column headerValue="Preview Link" width="13%">
          <apex:outputField value="{!item.Preview_Link__c}" />
        </apex:column>
      </apex:pageBlockTable>
      <apex:actionStatus startText="processing... " id="stsDeleteing" />
      <apex:pageMessages id="msg" />
    </apex:pageBlock>
    <apex:actionFunction name="rerenderTablePanel" rerender="tablePanel" />
  </apex:form>
  <script src="https://sdk.amazonaws.com/js/aws-sdk-2.1.24.min.js"></script>
  
  <script type="text/javascript">
    //alert(urlLinks);
    AWS.config.update({
      accessKeyId: "{!accessKey}",
      secretAccessKey: "{!accessSecKey}"
    });
    AWS.config.region = "us-east-1";

    var bucket = new AWS.S3({ params: { Bucket: "{!buckName}" } });
    var isVDType = "{!isVDType}";           //Lelo 2016-11-15
    document.getElementById("results2").style.visibility = "hidden";

    // getElementById
    function $id(id) {
      return document.getElementById(id);
    }

    //
    // output information
    function Output(msg) {
      var m = $id("messages");
      m.innerHTML = msg + m.innerHTML;
    }

    // call initialization file
    if (window.File && window.FileList && window.FileReader) {
      Init();
    }

    //
    // initialize
    function Init() {
      var fileselect = $id("fileselect"),
        filedrag = $id("filedrag"),
        submitbutton = $id("submitbutton");

      // file select
      fileselect.addEventListener("change", FileSelectHandler, false);

      // is XHR2 available?
      var xhr = new XMLHttpRequest();

      if (xhr.upload) {
        //xhr.upload.addEventListener("progress", uploadProgress, false);
        // file drop
        filedrag.addEventListener("dragover", FileDragHover, false);
        filedrag.addEventListener("dragleave", FileDragHover, false);
        filedrag.addEventListener("drop", FileSelectHandler, false);
        filedrag.style.display = "block";

        // remove submit button
        submitbutton.style.display = "none";
      }
    }

    // file drag hover
    function FileDragHover(e) {
      e.stopPropagation();
      e.preventDefault();
      e.target.className = (e.type == "dragover" ? "hover" : "");
    }

    // Define Cloud Document
    function build__Cloud_Documents__c() {
      this.Id = null;
      this.Name = null;
      this.File_Name__c = null;
      this.Folder_Id__c = null;
      this.Custom_Opportunity__c = null;
      this.VD_Opportunity_Document__c = null;             //Lelo 2016-11-15
      this.Access_Level__c = null;
      this.Bucket_Name__c = null;
    }
    // file selection
    function FileSelectHandler(e) {

      // cancel event and hover styling
      FileDragHover(e);

      // fetch FileList object
      var files = e.target.files || e.dataTransfer.files;
      console.log('process started!');
      console.log('Total files: ' + files.length);
      for (var i = 0; i < files.length; i++) {
        var f = files[i];
        if (f) {
          console.log('Uploading file: ' + f.name);
          ParseFile(f, i, files.length);
          console.log('File uploaded ' + f.name);
        }
      }
      console.log('process finished!');


    }
    function reloadPage() {

      //Lelo      2016-11-15
      //document.location.reload();   //original line
      var url = '/apex/RequiredDocuments2?&id={!Custom_Opportunity__c.Id}';
      if (isVDType == 'true') {
        url += '&TYPE=VD';
      }
      window.open(url, '_self', false);
    }
    var totalSize = 0;
    var uploadingSize = 0;
    function ParseFile(file, i, length) {

      var keyPath = "a0e-custom_opportunity__c/{!Custom_Opportunity__c.Name}-{!Custom_Opportunity__c.Id}/" + file.name;
      keyPath = keyPath.replace(/['´`’~+&$<>?%@#^*+=|! ]/g, '_');
      var params = { Bucket: "{!buckName}", Key: keyPath, Body: file, ACL: "private", ContentType: file.type };

      var upload = new AWS.S3.ManagedUpload({ params: params });
      upload.on("httpUploadProgress", function (evt) {
        var fileSize = 0;
        var currSize = 0;
        var currSizeStr = "";
        var fileSizeStr = "";
        if (file.size > 1024 * 1024) {
          currSize = (Math.round(evt.loaded * 100 / (1024 * 1024)) / 100);
          fileSize = (Math.round(evt.total * 100 / (1024 * 1024)) / 100);
          currSizeStr = currSize.toString();
          fileSizeStr = fileSize.toString() + "MB";
        } else {
          currSize = (Math.round(evt.loaded * 100 / 1024) / 100);
          fileSize = (Math.round(evt.total * 100 / 1024) / 100);
          currSizeStr = currSize.toString();
          fileSizeStr = fileSize.toString() + "KB";
        }
        uploadingSize += evt.loaded;
        totalSize += evt.total;

        results.innerHTML = "Uploading Please wait... <img src=\"/img/loading.gif\" /> " + "Progress:" + currSizeStr + "/" + fileSizeStr;// + ' of ' + i + '/' + length + ' file/s.';
        // document.getElementById("results2").style.visibility = "hidden";
        // document.getElementById("j_id0:j_id16:tablePanel:j_id17:savebtn").style.visibility = "hidden";
        // document.getElementById("j_id0:j_id16:tablePanel:j_id17:bottom:savebtn").style.visibility = "hidden";
        var divEl = document.getElementById("results2");
        if (divEl) divEl.style.visibility = "hidden";
        divEl = document.getElementById("j_id0:j_id16:tablePanel:j_id17:savebtn");
        if (divEl) divEl.style.visibility = "hidden";
        divEl = document.getElementById("j_id0:j_id16:tablePanel:j_id17:bottom:savebtn");
        if (divEl) divEl.style.visibility = "hidden";
        //console.log('Progress:', evt.loaded, '/', evt.total); 
      }).send(function (err, data) {
        if (err) {
          results.innerHTML = "ERROR! file is big." + err;
        } else {
          var cloudDocs = [];
          var cloudDoc = new build__Cloud_Documents__c();
          cloudDoc.Name = file.name.substring(0, 80);
          cloudDoc.File_Name__c = file.name;
          // cloudDoc.Folder_Id__c = "a0e-custom_opportunity__c/{!Custom_Opportunity__c.Name}-{!Custom_Opportunity__c.Id}/" + file.name;
          cloudDoc.Folder_Id__c = keyPath;
          //Lelo 2016-11-15
          if (isVDType == 'true') {
            cloudDoc.VD_Opportunity_Document__c = "{!Custom_Opportunity__c.Id}";
          } else {
            cloudDoc.Custom_Opportunity__c = "{!Custom_Opportunity__c.Id}";
          }
          //-
          cloudDoc.Access_Level__c = "private";
          cloudDoc.Bucket_Name__c = "{!buckName}";
          cloudDocs.push(cloudDoc);
          console.log('Creating record in SF... ' + file.name);
          Visualforce.remoting.Manager.invokeAction(
            "{!$RemoteAction.RequiredDocumentsExtension.insertCloudDocs}", cloudDocs,
            function (result, event) {
              results.innerHTML = "";
              var divEl = document.getElementById("results2");
              if (divEl) divEl.style.visibility = "visible";
              divEl = document.getElementById("j_id0:j_id16:tablePanel:j_id17:savebtn");
              if (divEl) divEl.style.visibility = "visible";
              divEl = document.getElementById("j_id0:j_id16:tablePanel:j_id17:bottom:savebtn");
              if (divEl) divEl.style.visibility = "visible";
              console.log(JSON.stringify(result, null, 2));
              console.log(JSON.stringify(event, null, 2));
              console.log('record created');
            }
          );
        }
        //console.log(err, data);
      });
    }

  </script>
  </apex:page>